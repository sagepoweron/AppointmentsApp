// <auto-generated />
using System;
using AppointmentsApp.MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentsApp.MVC.Migrations
{
    [DbContext(typeof(AppointmentsAppMVCContext))]
    partial class AppointmentsAppMVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("AppointmentsApp.Data.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68fc7e78-9b26-45b3-ab8d-582023834e84"),
                            Name = "Client1"
                        },
                        new
                        {
                            Id = new Guid("89bbf2fb-a35b-4935-8ff5-3bcef0f33a50"),
                            Name = "Client2"
                        });
                });

            modelBuilder.Entity("AppointmentsApp.Data.Models.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ff735dd-2da7-4322-8d92-9f775060251d"),
                            Name = "Doctor1"
                        },
                        new
                        {
                            Id = new Guid("1001fdaf-2aee-4280-b819-38f649d03eb0"),
                            Name = "Doctor2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
